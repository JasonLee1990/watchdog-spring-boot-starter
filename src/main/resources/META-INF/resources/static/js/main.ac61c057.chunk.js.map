{"version":3,"sources":["logo.svg","components/ApplicationForm.js","components/ApplicationViewer.js","app/FormAction.js","app/FormActionType.js","App.js","serviceWorker.js","app/FormStrore.js","app/FormReducer.js","config/Axios.config.js","index.js"],"names":["module","exports","__webpack_require__","p","FormItem","es_form","Item","DEFAULT_STATE","clientId","name","redirectUri","scope","redirectUriInputValue","redirectUriInputVisible","scopeInputValue","scopeInputVisible","_ObjectIsEmpty","obj","Object","keys","length","ApplicationForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleOkButtonOnClick","form","validateFields","err","values","params","redirect_uri","state","axios","put","concat","then","res","refreshApplications","catch","error","post","close","setState","handleCancelButtonOnClick","handleNameOnChange","e","target","value","handleTagConfirm","tags","tag","afterEvent","arguments","undefined","indexOf","toConsumableArray","handleRedirectUriConfirm","handleScopeConfirm","handleRedirectUriRemove","index","handleTagsRemove","handleScopeRemove","renderTags","options","handleClose","color","map","isLongTag","tagElem","react_default","a","createElement","es_tag","key","closable","onClose","slice","tooltip","title","visible","application","client_id","array","splice","_this2","formItemLayout","labelCol","xs","span","sm","wrapperCol","getFieldDecorator","_this$state","modal","onOk","onCancel","onSubmit","handleSubmit","assign","label","rules","required","message","input","onChange","placeholder","extra","type","size","style","width","onBlur","onPressEnter","onClick","background","borderStyle","icon","React","Component","defaultProps","WrappedForm","create","mapPropsToFields","createFormField","ApplicationViewer","url","window","open","focus","footer","es_button","ApplicationViewer_FormItem","lib","onCopy","info","text","className","client_secret","_authentication","App","_getApplications","get","withCredentials","changeOrigin","applications","data","handleEditButtonOnClick","handleCreateButtonOnClick","handleDeleteButtonOnClick","delete","handleShowButtonOnClick","viewerVisible","columns","dataIndex","render","record","bind","assertThisInitialized","divider","popconfirm","onConfirm","okText","cancelText","row","col","src","logo","alt","table","rowKey","dataSource","components_ApplicationForm","ApplicationViewer_ApplicationViewer","connect","objectSpread","FormAction","Boolean","location","hostname","match","store","createStore","interceptors","request","use","config","path","startsWith","response","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac61c057.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7f4accb6.svg\";","import React from 'react';\nimport { Modal, Form, Input, Tag, Tooltip, Icon } from 'antd';\nimport axios from 'axios';\nconst FormItem = Form.Item;\nconst DEFAULT_STATE = {\n  clientId: null,\n  name: null,\n  redirectUri: [],\n  scope: [],\n  redirectUriInputValue: '',\n  redirectUriInputVisible: false,\n  scopeInputValue: '',\n  scopeInputVisible: false\n}\nconst _ObjectIsEmpty = (obj) => {\n  return Object.keys(obj).length === 0\n}\nclass ApplicationForm extends React.Component {\n\n  static defaultProps = {\n    application: {},\n    visible: false\n  }\n\n  constructor(props){\n    super(props)\n    this.state = DEFAULT_STATE\n  }\n\n  handleOkButtonOnClick = () => {\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const params = {\n          name: values.name,\n          redirect_uri: this.state.redirectUri,\n          scope: this.state.scope\n        }\n        if(this.state.clientId){\n          axios.put(`/applications/${this.state.clientId}`, params).then((res) => {\n            this.props.refreshApplications();\n          }).catch(error => {\n    \n          })\n        }else{\n          axios.post('/applications', params).then((res) => {\n            this.props.refreshApplications();\n          }).catch(error => {\n            \n          })\n        }\n    \n        this.props.close({})\n        this.setState(DEFAULT_STATE)\n      }\n    });\n  }\n\n  handleCancelButtonOnClick = () => {\n    this.props.close({})\n    this.setState(DEFAULT_STATE)\n  }\n\n  handleNameOnChange = (e) => {\n    this.setState({name: e.target.value})\n  }\n\n  componentWillReceiveProps(props){\n    if(props.visible){\n      const clientId =  _ObjectIsEmpty(props.application) ? null : props.application.client_id\n      const name =  _ObjectIsEmpty(props.application) ? null : props.application.name\n      const redirectUri =  _ObjectIsEmpty(props.application) ? [] : props.application.redirect_uri\n      const scope = _ObjectIsEmpty(props.application) ? [] : props.application.scope\n      this.setState({\n        clientId,\n        name: name,\n        redirectUri,\n        scope: scope\n      })\n    }\n  }\n\n  \n  handleTagConfirm = (tags, tag,afterEvent = () => {}) => {\n    if (tag && tags.indexOf(tag) === -1) {\n      tags = [...tags, tag];\n    }\n    afterEvent(tags)\n  }\n\n  handleRedirectUriConfirm = () => {\n    this.handleTagConfirm(this.state.redirectUri, this.state.redirectUriInputValue, (tags) => {\n      this.setState({\n        redirectUri: tags,\n        redirectUriInputValue: '',\n        redirectUriInputVisible: false\n      })\n    })\n  }\n\n  handleScopeConfirm = () => {\n    this.handleTagConfirm(this.state.scope, this.state.scopeInputValue, (tags) => {\n      this.setState({\n        scope: tags,\n        scopeInputValue: '',\n        scopeInputVisible: false\n      })\n    })\n  }\n\n  handleTagsRemove(index, array, afterEvent){\n    array.splice(index, 1)\n    afterEvent(array)\n  }\n\n  handleRedirectUriRemove = (index, tag) => {\n    this.handleTagsRemove(index, this.state.redirectUri, (redirectUri) => {\n      this.setState({redirectUri})\n    })\n  }\n\n  handleScopeRemove = (index, tag) => {\n    this.handleTagsRemove(index, this.state.scope, (scope) => {\n      debugger\n      this.setState({scope})\n    })\n  }\n\n  renderTags = (tags, options = {}) => {\n    options.handleClose =  options.handleClose || ((index, tag) => {})\n    options.color = options.color  || 'cyan'\n    return tags.map((tag, index) => {\n      const isLongTag = tag.length > 30;\n      const tagElem = (\n        <Tag color={options.color} key={tag} closable={true} onClose={()=> { options.handleClose(index, tag) }}>\n          {isLongTag ? `${tag.slice(0, 30)}...` : tag}\n        </Tag>\n      );\n      return isLongTag ? <Tooltip title={tag} key={tag}>{tagElem}</Tooltip> : tagElem;\n    })\n  }\n\n  render() {\n    const visible = this.props.visible\n    const title = Object.keys(this.props.application).length === 0 ? 'Create' : \"Update\";\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 18 },\n      },\n    };\n    const { getFieldDecorator } = this.props.form;\n    const {redirectUriInputValue, redirectUriInputVisible, scopeInputVisible, scopeInputValue} = this.state\n    return (\n      <div>\n        <Modal\n          title={title}\n          visible={visible}\n          onOk={this.handleOkButtonOnClick}\n          onCancel={this.handleCancelButtonOnClick}\n        >\n          <Form onSubmit={this.handleSubmit}>\n            <FormItem {...formItemLayout} label=\"Name\">\n              {getFieldDecorator('name', {\n                rules: [{ required: true, message: 'Please input your app name!' }]\n              })(\n                <Input required={true} onChange={this.handleNameOnChange} placeholder=\"Please enter an app name\" />\n              )}\n            </FormItem>\n            <FormItem {...formItemLayout} label=\"Redirect Uri\" extra='Leave blank to use the `urn:ietf:wg:oauth:2.0:oob` the redirect uri.'>\n              {\n                this.renderTags(this.state.redirectUri, { handleClose: this.handleRedirectUriRemove })\n              }\n              {\n                redirectUriInputVisible && (\n                  <Input\n                    type=\"text\"\n                    size=\"small\"\n                    style={{ width: 78 }}\n                    value={redirectUriInputValue}\n                    onChange={(e) => { this.setState({redirectUriInputValue: e.target.value}) }}\n                    onBlur={this.handleRedirectUriConfirm}\n                    onPressEnter={this.handleRedirectUriConfirm}\n                  />\n                )\n              }\n\n              {!redirectUriInputVisible && (\n                <Tag\n                  onClick={() => { this.setState({redirectUriInputVisible: true}) }}\n                  style={{ background: '#fff', borderStyle: 'dashed' }}\n                >\n                  <Icon type=\"plus\" /> New\n                </Tag>\n              )}\n            </FormItem>\n            <FormItem {...formItemLayout} label=\"Scope\" extra='Leave blank to use the DEFAULT scopes.'>\n              {\n                this.renderTags(this.state.scope, { color: 'green', handleClose: this.handleScopeRemove })\n              }\n              {\n                scopeInputVisible && (\n                  <Input\n                    type=\"text\"\n                    size=\"small\"\n                    style={{ width: 78 }}\n                    value={scopeInputValue}\n                    onChange={(e) => { this.setState({scopeInputValue: e.target.value}) }}\n                    onBlur={this.handleScopeConfirm}\n                    onPressEnter={this.handleScopeConfirm}\n                  />\n                )\n              }\n\n              {!scopeInputVisible && (\n                <Tag\n                  onClick={() => { this.setState({scopeInputVisible: true}) }}\n                  style={{ background: '#fff', borderStyle: 'dashed' }}\n                >\n                  <Icon type=\"plus\" /> New\n                </Tag>\n              )}\n            </FormItem>\n          </Form>\n        </Modal>\n      </div>\n    )\n  }\n}\nconst WrappedForm = Form.create({\n  mapPropsToFields(props){\n    return {\n      name: Form.createFormField({\n        value: props.application.name,\n      })\n    }\n  }\n})(ApplicationForm);\nexport default WrappedForm","import React from 'react';\nimport { Modal, Button, Form, Tag, Tooltip, Icon, message } from 'antd';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nconst FormItem = Form.Item;\nexport default class ApplicationViewer extends React.Component {\n\n  _authentication(redirect_uri){\n\n    var url = `/oauth/authorize?client_id=${this.props.application.client_id}&redirect_uri=${redirect_uri}&response_type=code`\n    var win = window.open(url, '_blank');\n    win.focus();\n  }\n\n  render() {\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 20 },\n      },\n    };\n    return (\n      <Modal\n        title={`${this.props.application.name}`}\n        visible={this.props.visible}\n        onOk={this.props.handleClose}\n        onCancel={this.props.handleClose}\n        footer={\n          [\n            <Button key=\"viewerOK\" onClick={this.props.handleClose}>OK</Button>\n          ]\n        }\n        width={750}\n      >\n        <Form>\n          <FormItem {...formItemLayout} label=\"Client ID\">\n            <code>{this.props.application.client_id}</code>\n            <CopyToClipboard  onCopy={()=>{message.info('Successfully copied.');}} text={this.props.application.client_id}>\n              <Button className=\"copy-button\"  icon=\"copy\" type=\"small\" />\n            </CopyToClipboard>\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"Client Secret\">\n            <code>{this.props.application.client_secret}</code>\n            <CopyToClipboard  onCopy={()=>{message.info('Successfully copied.');}} text={this.props.application.client_secret}>\n              <Button className=\"copy-button\" icon=\"copy\" type=\"small\" />\n            </CopyToClipboard>\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"Redirect Uri\">\n            {\n              (this.props.application.redirect_uri || []).map((tag, index) => {\n                const isLongTag = tag.length > 30;\n                const tagElem = (\n                  <Tag color=\"cyan\" onClick={() => { this._authentication(tag) }} key={tag} closable={false}>\n                    {isLongTag ? `${tag.slice(0, 30)}...` : tag}\n                  </Tag>\n                );\n                return <Tooltip title={'Click to jump to authorization url'} key={tag}>{tagElem}</Tooltip>;\n              })\n            }\n          </FormItem>\n          <FormItem {...formItemLayout} label=\"Scopes\">\n            {\n              (this.props.application.scope || []).map((tag, index) => {\n                const isLongTag = tag.length > 30;\n                const tagElem = (\n                  <Tag color=\"green\" key={tag} closable={false}>\n                    {isLongTag ? `${tag.slice(0, 30)}...` : tag}\n                  </Tag>\n                );\n                return <Tooltip title={tag} key={tag}>{tagElem}</Tooltip>;\n              })\n            }\n          </FormItem>\n        </Form>\n      </Modal>\n    )\n  }\n}","import * as FormActionTypes from './FormActionType';\nexport const open = () => {\n    return {\n        type: FormActionTypes.OPEN\n    }\n}\n\nexport const close = () => {\n    return {\n        type: FormActionTypes.CLOSE\n    }\n}","export const OPEN = \"open\"\nexport const CLOSE = \"close\"","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Button, Table, Divider, Tag, Row, Col, Popconfirm } from 'antd';\nimport axios from 'axios';\nimport './App.scss';\nimport ApplicationForm from './components/ApplicationForm';\nimport ApplicationViewer from './components/ApplicationViewer';\nimport * as FormAction from './app/FormAction';\nimport { connect } from 'react-redux';\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      applications: [],\n      application: {},\n      viewerVisible: false\n    }\n  }\n\n  componentWillMount() {\n    this._getApplications();\n  }\n\n  _getApplications = () => {\n    axios.get('/applications', { withCredentials: true, changeOrigin: true }).then((applications => {\n      this.setState({ applications: applications.data })\n    })).catch((error) => {\n\n    });\n  }\n\n  handleEditButtonOnClick = (application) => {\n    this.setState({application})\n    this.props.open();\n  }\n\n  handleCreateButtonOnClick = (application) => {\n    this.setState({application: {}})\n    this.props.open();\n  }\n\n  handleDeleteButtonOnClick = (application) => {\n    axios.delete(`/applications/${application.client_id}`).then(() => {\n      this._getApplications()\n    }).catch(error => {\n\n    })\n  }\n\n  handleShowButtonOnClick = (application) => {\n    this.setState({\n      viewerVisible: true,\n      application\n    })\n  }\n\n  columns = [{\n    title: 'Client ID',\n    dataIndex: 'client_id',\n    key: 'client_id'\n  }, {\n    title: 'Application Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: text => <span>{text}</span>,\n  }, {\n    title: 'Scopes',\n    key: 'scope',\n    dataIndex: 'scope',\n    render: tags => (\n      <span>\n        {tags.map(tag => <Tag color=\"blue\" key={tag}>{tag}</Tag>)}\n      </span>\n    ),\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => (\n      <span>\n        <Button onClick={this.handleShowButtonOnClick.bind(this, record)}>Show</Button>\n        <Divider type=\"vertical\" />\n        <Button onClick={this.handleEditButtonOnClick.bind(this, record)}>Edit</Button>\n        <Divider type=\"vertical\" />\n        <Popconfirm title=\"Are you sure delete this application?\" onConfirm={this.handleDeleteButtonOnClick.bind(this, record)} onCancel={() => {}} okText=\"Yes\" cancelText=\"No\">\n          <Button type=\"danger\">Delete</Button>\n        </Popconfirm>\n      </span>\n    ),\n  }];\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Row className=\"header\" type=\"flex\">\n          <Col className=\"header-logo-banner\" span={12}>\n            <img className=\"header-logo-banner__img\" src={logo} alt=\"watchdog log\" />\n            WatchDog\n          </Col>\n          <Col className=\"header-menu\" span={12}>\n            <Button onClick={this.handleCreateButtonOnClick} type=\"primary\">Create</Button>\n          </Col>\n        </Row>\n        <div className=\"main\">\n          <Table rowKey=\"client_id\" dataSource={this.state.applications} columns={this.columns} />\n        </div>\n        <ApplicationForm refreshApplications={this._getApplications} visible={this.props.visible} application={this.state.application} close={() => { this.props.close({}) }} />\n        <ApplicationViewer handleClose={() => {this.setState({viewerVisible: false})}} visible={this.state.viewerVisible} application={this.state.application} />\n      </div>\n    );\n  }\n}\n\nconst formStateToProps = state => ({\n  ...state\n})\n\nexport default connect(formStateToProps, FormAction)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore } from 'redux'\nimport formReducer from './FormReducer'\n\nconst store = createStore(formReducer)\nexport default store","import * as FormActionTypes from './FormActionType';\nexport default (options = {}, action) => {\n    switch(action.type) {\n        case FormActionTypes.CLOSE:\n            return { visible: false }\n        case FormActionTypes.OPEN:\n            return { visible: true }\n        default:\n            return { visible: false }\n    }\n}","import axios from 'axios';\n\n//拦截请求\naxios.interceptors.request.use(function(config){\n  const path = config.url.startsWith('/') ? config.url : `/${config.url}`\n  const host = ''\n  const url = `${host}${path}`\n  config.url = url;\n  return config\n})\n\n//拦截响应\naxios.interceptors.response.use(function(config){\n  return config\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './app/FormStrore';\nimport { Provider } from 'react-redux';\nimport './config/Axios.config';\nReactDOM.render(\n    <Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}